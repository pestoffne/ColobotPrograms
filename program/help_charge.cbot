extern void object::HelpCharge() {
	EBoost e(this);
	
	int bots[];
	
	bots[0] = WheeledGrabber;
	bots[1] = TrackedGrabber;
	bots[2] = WingedGrabber;
	bots[3] = LeggedGrabber;
	
	bots[4] = WheeledSniffer;
	bots[5] = TrackedSniffer;
	bots[6] = WingedSniffer;
	bots[7] = LeggedSniffer;
	
	bots[8] = WheeledShooter;
	bots[9] = TrackedShooter;
	bots[10] = WingedShooter;
	bots[11] = LeggedShooter;
	
	bots[12] = WheeledOrgaShooter;
	bots[13] = TrackedOrgaShooter;
	bots[14] = WingedOrgaShooter;
	bots[15] = LeggedOrgaShooter;
	
	bots[16] = Subber;
	bots[17] = Recycler;
	bots[18] = Shielder;
	bots[19] = Thumper;
	bots[20] = PhazerShooter;
	
	bots[21] = PracticeBot;
	
	int cells[];
	
	cells[0] = PowerCell;
	cells[1] = NuclearCell;
	
	object[] items, nuclear_cells; object power_station;
	
	items = radarall(bots, 0, 360, 0, 1024, -1);
	
	for (int i = sizeof(items) - 1; i >= 0; --i) {
		if (items[i].energyCell != null and
		        items[i].energyCell.category == PowerCell and
		        items[i].energyCell.energyLevel < 0.25) {
			goto(items[i].position);
			grab();
			
			power_station = radar(PowerStation);
			goto(power_station.position);
			
			while (energyCell.energyLevel < 1 and load.energyLevel < 1) {
				wait(1);
			}
			
			goto(items[i].position);
			drop();
		}
		
		if (items[i].energyCell != null and
		        items[i].energyCell.category == NuclearCell and
		        items[i].energyCell.energyLevel < 0.1) {
			nuclear_cells = radarall(NuclearCell);
			
			for (int j = sizeof(nuclear_cells) - 1; j >= 0; --j) {
				if (nuclear_cells[j].energyLevel > 0.75) {
					e.check_energy_loop();
					
					goto(nuclear_cells[j].position);
					grab();
					break;
				}
			}
			
			if (load == null or load.category != NuclearCell) {
				message("No NuclearCell", DisplayError);
				return;
			}
			
			goto(items[i].position);
			drop(Behind);
			grab();
			turn(90);
			drop();
			turn(-90);
			grab(Behind);
			drop();
		}
		
		if (items[i].energyCell == null) {
			nuclear_cells = radarall(NuclearCell);
			
			for (int j = sizeof(nuclear_cells) - 1; j >= 0; --j) {
				if (nuclear_cells[j].energyLevel > 0.75) {
					e.check_energy_loop();
					
					goto(nuclear_cells[j].position);
					grab();
					break;
				}
			}
			
			if (load == null or load.category != NuclearCell) {
				message("No NuclearCell", DisplayError);
				return;
			}
			
			goto(items[i].position);
			drop();
		}
	}
}