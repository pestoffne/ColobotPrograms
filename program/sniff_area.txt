void object::sniff_cylinder(point center, float area_r, float flat_r, float half_height, int sign_x=1) {
	int min_x, min_y, max_x, max_y, sign_y, total_sniffs; point pos; float sniff_dist;
	EBoost e(this);
	
	sign_y = 1;
	min_x = round(center.x - area_r);
	min_y = round(center.y - area_r);
	max_x = round(center.x + area_r);
	max_y = round(center.y + area_r);
	total_sniffs = 0;
	sniff_dist = 1.875;
	
	for (pos.x = e.round_cell(center.x - sign_x * (area_r - 2.55));
	        pos.x >= min_x and pos.x <= max_x; pos.x += 5 * sign_x) {
		for (pos.y = e.round_cell(center.y - sign_y * (area_r - 2.55));
		             pos.y >= min_y and pos.y <= max_y; pos.y += 5 * sign_y) {
			if (distance2d(pos, center) > area_r
			        or flatground(pos, flat_r) < flat_r
			        or abs(topo(pos) - center.z) > half_height) {
				continue;
			}
			
			if (distance2d(e.grab_position(sniff_dist), pos) > 10) {
				e.goto_o(pos, sniff_dist);
			}
			
			if (distance2d(e.grab_position(sniff_dist), pos) > 0.25) {
				e.goto_straight(pos, sniff_dist);
			}
			
			if (distance2d(e.grab_position(sniff_dist), pos) > 0.25) {
				e.goto_straight(pos, sniff_dist);
			}
			
			if (distance2d(e.grab_position(sniff_dist), pos) > 1.0) {
				message("goto fail", DisplayWarning);
				continue;
			}
			
			sniff();
			total_sniffs++;
			e.check_energy_loop();
		}
		
		sign_y *= -1;
	}
	
	message("sniff_cylinder is complete, total_sniffs = " + total_sniffs);
}

extern void object::SniffArea3() {
	sniff_cylinder(radar(PowerCaptor).position, 50.0, 2.5, 5.0, -1);
}
