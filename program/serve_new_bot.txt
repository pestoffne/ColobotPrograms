extern void object::ServeNewBot() {
	int bots[21];
	
	bots[0] = WheeledGrabber;
	bots[1] = TrackedGrabber;
	bots[2] = WingedGrabber;
	bots[3] = LeggedGrabber;
	
	bots[4] = WheeledSniffer;
	bots[5] = TrackedSniffer;
	bots[6] = WingedSniffer;
	bots[7] = LeggedSniffer;
	
	bots[8] = WheeledShooter;
	bots[9] = TrackedShooter;
	bots[10] = WingedShooter;
	bots[11] = LeggedShooter;
	
	bots[12] = WheeledOrgaShooter;
	bots[13] = TrackedOrgaShooter;
	bots[14] = WingedOrgaShooter;
	bots[15] = LeggedOrgaShooter;
	
	bots[16] = Subber;
	bots[17] = Recycler;
	bots[18] = Shielder;
	bots[19] = Thumper;
	bots[20] = PhazerShooter;
	
	int cells[2];
	
	cells[0] = PowerCell;
	cells[1] = NuclearCell;
	
	object[] items; object item; object bot_factory; point start;
	EBoost e(this);
	
	start = position;
	
	// 1) Grab Titanium
	items = radarall(Titanium);
	if (items == null) {
		message("Unable to find Titanium", DisplayError);
		return;
	}
	for (int i = 0;; ++i) {
		if (i >= sizeof(items)) {
			message("Unable to grub Titanium", DisplayError);
			return;
		}
		if (goto(items[i].position) == 0
		        and grab() == 0
		        and load != null) {
			if (load.category == Titanium) {
				break;  // success
			} else {
				goto(space(position));
				drop();
			}
		}
		// if something wrong go to the next item
		message("next");
	}
	
	// 2) Drop Titanium into BotFactory
	bot_factory = radar(BotFactory);
	goto(bot_factory.position);
	drop();
	
	// 3) Grab PowerCell or NuclearCell from groud
	item = e.radar_best_cell();
	
	for (;;) {
		goto(item.position);
		grab();
		
		if (load != null and load.category == PowerCell and load.energyLevel >= item.energyLevel) {
			break;
		}
		
		goto(space(position));
		drop();
	}
	
	// 4) Go to front of the same BotFactory
	e.goto_pp(bot_factory.position, 180 + bot_factory.orientation, 5.5);
	
	// 5) Wait until Bot created
	do {
		item = radar(bots, 0, 15, 0, 12);
	} while (item == null);
	
	// 6) Drop PowerCell or NuclearCell to Bot
	goto(item.position);
	drop();
	message("New " + item.category + " is ready.");
	
	// 7) Return to start position
	goto(start);
}
