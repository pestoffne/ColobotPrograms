extern void object::ServeNewBot() {
	int cells[2];
	
	cells[0] = PowerCell;
	cells[1] = NuclearCell;
	
	object[] items; object item; object bot_factory; point start; int[] bots;
	EBoost e(this);
	
	bots = e.list_bots();
	start = position;
	
	// 1) Grab Titanium
	if (load == null or load.category != Titanium) {
		items = radarall(Titanium);
		if (items == null) {
			message("Unable to find Titanium", DisplayError);
			return;
		}
		for (int i = 0;; ++i) {
			if (i >= sizeof(items)) {
				message("Unable to grub Titanium", DisplayError);
				return;
			}
			if (goto(items[i].position) == 0
			        and grab() == 0
			        and load != null) {
				if (load.category == Titanium) {
					break;  // success
				} else {
					goto(space(position));
					drop();
				}
			}
			// if something wrong go to the next item
			message("next");
		}
	}
	
	// 2) Drop Titanium into BotFactory
	bot_factory = radar(BotFactory);
	goto(bot_factory.position);
	drop();
	
	// 3) Grab PowerCell or NuclearCell from groud
	item = e.radar_best_cell();
	
	for (;;) {
		goto(item.position);
		grab();
		
		if (load != null and load.category == PowerCell and load.energyLevel >= item.energyLevel) {
			break;
		}
		
		goto(space(position, 2));
		drop();
	}
	
	// 4) Go to front of the same BotFactory
	e.goto_pp(bot_factory.position, 180 + bot_factory.orientation, 5.5);
	
	// 5) Wait until Bot created
	item = e.radar_wait(new RadarArgs(bots, 0, 15, 0, 12));
	
	// 6) Drop PowerCell or NuclearCell to Bot
	goto(item.position);
	drop();
	message("New " + item.category + " is ready.");
	
	// 7) Return to start position
	goto(start);
}
