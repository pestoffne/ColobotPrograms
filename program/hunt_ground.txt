float object::AbsMin(float a, float b) {
	if (abs(a) < abs(b)) {
		return a;
	}
	
	return b;
}

// TODO: divide by 0 is forbidden
// TODO: nan velocity
bool object::check_shoot_relief(point p1, point p2) {
	float orient_, pitch_, distance2d_; point pm; int i;
	
	orient_ = atan((p1.y - p2.y) / (p1.x - p2.x));
	
	if (p1.x > p2.x) {
		orient_ += 180;
	}
	
	distance2d_ = distance2d(p1, p2);
	pitch_ = atan((p2.z - p1.z) / distance2d_);
	
	for (i = 1; i < distance2d_; ++i) {
		pm.x = p1.x - i * cos(orient_);
		pm.y = p1.y - i * sin(orient_);
		pm.z = p1.z - i * cos(pitch_);
		message("i = " + i + " point(" +pm.x + ", " + pm.y + ", " + pm.z + "); topo = " + topo(pm));
		
		if (topo(pm) > pm.z) {
			return false;
		}
	}
	
	return true;
}

extern void object::HuntGround() {
	object item; point pos; float t, ay, bx, by, angle; bool can_aim, stay; int i; int aliens[];
	
	i = 0;
	aliens[i++] = AlienAnt;
	aliens[i++] = AlienSpider;
	aliens[i++] = AlienWasp;
	aliens[i++] = AlienWorm;
	
	stay = false;
	
	for (int tick = 0;; ++tick) {
		item = radar(aliens);
		
		if (item == null) {
			motor(0, 0);
			wait(1);
			continue;
		}
		
		if (not stay) {
			motor(1, 1);
		}
		
		wait(0.2);
		
		item = radar(aliens);
		
		if (item == null) {
			continue;
		}
		
		t = distance(item.position, position) / 100;
		pos.x = item.position.x + item.velocity.x * t;
		pos.y = item.position.y + item.velocity.y * t;
		pos.z = item.position.z;
		angle = direction(pos);
		
		if (abs(angle) > 1) {
			turn(angle);
		}
		
		item = radar(aliens, 0, 360, 0, 40);
		
		if (item == null) {
			continue;
		}
		
		ay = atan((pos.z - position.z - 1.5) / distance2d(pos, position))
		            - AbsMin(pitch, pitch - 360);
		bx = ay * sin(roll);
		by = ay * cos(roll);
		aim(by, bx);
		
		item = radar(aliens, 0, 360, 0, 40);
		
		if (item == null) {
			continue;
		}
		
		t = distance(item.position, position) / 100;
		pos.x = item.position.x + item.velocity.x * t;
		pos.y = item.position.y + item.velocity.y * t;
		pos.z = item.position.z;
		angle = direction(pos);
		
		if (abs(angle) > 1) {
			turn(angle);
		}
		
		item = radar(aliens, 0, 360, 0, 40);
		
		if (item == null) {
			continue;
		}
		
		ay = atan((pos.z - position.z - 1.5) / distance2d(pos, position))
		            - AbsMin(pitch, pitch - 360);
		bx = ay * sin(roll);
		by = ay * cos(roll);
		aim(by, bx);
		
		//pos = position;
		//pos.z += 1.5;
		//message("" + check_shoot_relief(pos, item.position));
		
		can_aim = bx >= -45 and bx <= 45 and by >= -20 and by <= 20;
		if (can_aim) {
			fire(0.07);
			
			if (not stay) {
				motor(1, 1);
			}
			
			wait(0.63);
		}
	}
	
	message("Hunt is complete");
}
