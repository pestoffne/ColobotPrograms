#define _MAP_TRIPLET(count, macro, ...) _MT_ ## count(macro, __VA_ARGS__)
#define _MT_1(m, a, b, c) m(a, b, c)
#define _MT_2(m, a, b, c, ...) m(a, b, c, __VA_ARGS__) _MT_1(m, __VA_ARGS__)
#define _MT_3(m, a, b, c, ...) m(a, b, c, __VA_ARGS__) _MT_2(m, __VA_ARGS__)
#define _MT_4(m, a, b, c, ...) m(a, b, c, __VA_ARGS__) _MT_3(m, __VA_ARGS__)
#define _MT_5(m, a, b, c, ...) m(a, b, c, __VA_ARGS__) _MT_4(m, __VA_ARGS__)
#define _MT_6(m, a, b, c, ...) m(a, b, c, __VA_ARGS__) _MT_5(m, __VA_ARGS__)
#define _MT_7(m, a, b, c, ...) m(a, b, c, __VA_ARGS__) _MT_6(m, __VA_ARGS__)
#define _MT_8(m, a, b, c, ...) m(a, b, c, __VA_ARGS__) _MT_7(m, __VA_ARGS__)

#define _ARGUMENT(type, name, default, ...) type name default __VA_OPT__(,)
#define _ASSIGN(type, name, ...) this.name = name;
#define _FIELD(type, name, ...) public type name;

#define NAMED_TUPLE(tuple_name, count, ...) \
	public class tuple_name { \
		public void tuple_name(_MAP_TRIPLET(count, _ARGUMENT, __VA_ARGS__)) { \
			_MAP_TRIPLET(count, _ASSIGN, __VA_ARGS__) \
		} \
		_MAP_TRIPLET(count, _FIELD, __VA_ARGS__) \
	}

#define REPEAT(count, macro) _REPEAT_##count(macro)
#define _REPEAT_1(macro) macro(1)
#define _REPEAT_2(macro) _REPEAT_1(macro) macro(2)
#define _REPEAT_3(macro) _REPEAT_2(macro) macro(3)
#define _REPEAT_4(macro) _REPEAT_3(macro) macro(4)
#define _REPEAT_5(macro) _REPEAT_4(macro) macro(5)
#define _REPEAT_6(macro) _REPEAT_5(macro) macro(6)
#define _REPEAT_7(macro) _REPEAT_6(macro) macro(7)
#define _REPEAT_8(macro) _REPEAT_7(macro) macro(8)
#define _REPEAT_9(macro) _REPEAT_8(macro) macro(9)
#define _REPEAT_10(macro) _REPEAT_9(macro) macro(10)
#define _REPEAT_11(macro) _REPEAT_10(macro) macro(11)
#define _REPEAT_12(macro) _REPEAT_11(macro) macro(12)
#define _REPEAT_13(macro) _REPEAT_12(macro) macro(13)
#define _REPEAT_14(macro) _REPEAT_13(macro) macro(14)
#define _REPEAT_15(macro) _REPEAT_14(macro) macro(15)
#define _REPEAT_16(macro) _REPEAT_15(macro) macro(16)
#define _REPEAT_17(macro) _REPEAT_16(macro) macro(17)
#define _REPEAT_18(macro) _REPEAT_17(macro) macro(18)
#define _REPEAT_19(macro) _REPEAT_18(macro) macro(19)
#define _REPEAT_20(macro) _REPEAT_19(macro) macro(20)
#define _REPEAT_21(macro) _REPEAT_20(macro) macro(21)
#define _REPEAT_22(macro) _REPEAT_21(macro) macro(22)
#define _REPEAT_23(macro) _REPEAT_22(macro) macro(23)
#define _REPEAT_24(macro) _REPEAT_23(macro) macro(24)
#define _REPEAT_25(macro) _REPEAT_24(macro) macro(25)
#define _REPEAT_26(macro) _REPEAT_25(macro) macro(26)
#define _REPEAT_27(macro) _REPEAT_26(macro) macro(27)
#define _REPEAT_28(macro) _REPEAT_27(macro) macro(28)
#define _REPEAT_29(macro) _REPEAT_28(macro) macro(29)
#define _REPEAT_30(macro) _REPEAT_29(macro) macro(30)
#define _REPEAT_31(macro) _REPEAT_30(macro) macro(31)
#define _REPEAT_32(macro) _REPEAT_31(macro) macro(32)
#define _REPEAT_33(macro) _REPEAT_32(macro) macro(33)
#define _REPEAT_34(macro) _REPEAT_33(macro) macro(34)
#define _REPEAT_35(macro) _REPEAT_34(macro) macro(35)
#define _REPEAT_36(macro) _REPEAT_35(macro) macro(36)
#define _REPEAT_37(macro) _REPEAT_36(macro) macro(37)
#define _REPEAT_38(macro) _REPEAT_37(macro) macro(38)
#define _REPEAT_39(macro) _REPEAT_38(macro) macro(39)
#define _REPEAT_40(macro) _REPEAT_39(macro) macro(40)
#define _REPEAT_41(macro) _REPEAT_40(macro) macro(41)
#define _REPEAT_42(macro) _REPEAT_41(macro) macro(42)
#define _REPEAT_43(macro) _REPEAT_42(macro) macro(43)
#define _REPEAT_44(macro) _REPEAT_43(macro) macro(44)
#define _REPEAT_45(macro) _REPEAT_44(macro) macro(45)
#define _REPEAT_46(macro) _REPEAT_45(macro) macro(46)
#define _REPEAT_47(macro) _REPEAT_46(macro) macro(47)
#define _REPEAT_48(macro) _REPEAT_47(macro) macro(48)
#define _REPEAT_49(macro) _REPEAT_48(macro) macro(49)
#define _REPEAT_50(macro) _REPEAT_49(macro) macro(50)
#define _REPEAT_51(macro) _REPEAT_50(macro) macro(51)
#define _REPEAT_52(macro) _REPEAT_51(macro) macro(52)
#define _REPEAT_53(macro) _REPEAT_52(macro) macro(53)
#define _REPEAT_54(macro) _REPEAT_53(macro) macro(54)
#define _REPEAT_55(macro) _REPEAT_54(macro) macro(55)
#define _REPEAT_56(macro) _REPEAT_55(macro) macro(56)
#define _REPEAT_57(macro) _REPEAT_56(macro) macro(57)
#define _REPEAT_58(macro) _REPEAT_57(macro) macro(58)
#define _REPEAT_59(macro) _REPEAT_58(macro) macro(59)
#define _REPEAT_60(macro) _REPEAT_59(macro) macro(60)
#define _REPEAT_61(macro) _REPEAT_60(macro) macro(61)
#define _REPEAT_62(macro) _REPEAT_61(macro) macro(62)
#define _REPEAT_63(macro) _REPEAT_62(macro) macro(63)
#define _REPEAT_64(macro) _REPEAT_63(macro) macro(64)
#define _REPEAT_65(macro) _REPEAT_64(macro) macro(65)
#define _REPEAT_66(macro) _REPEAT_65(macro) macro(66)
#define _REPEAT_67(macro) _REPEAT_66(macro) macro(67)
#define _REPEAT_68(macro) _REPEAT_67(macro) macro(68)
#define _REPEAT_69(macro) _REPEAT_68(macro) macro(69)
#define _REPEAT_70(macro) _REPEAT_69(macro) macro(70)
#define _REPEAT_71(macro) _REPEAT_70(macro) macro(71)
#define _REPEAT_72(macro) _REPEAT_71(macro) macro(72)
#define _REPEAT_73(macro) _REPEAT_72(macro) macro(73)
#define _REPEAT_74(macro) _REPEAT_73(macro) macro(74)
#define _REPEAT_75(macro) _REPEAT_74(macro) macro(75)
#define _REPEAT_76(macro) _REPEAT_75(macro) macro(76)
#define _REPEAT_77(macro) _REPEAT_76(macro) macro(77)
#define _REPEAT_78(macro) _REPEAT_77(macro) macro(78)
#define _REPEAT_79(macro) _REPEAT_78(macro) macro(79)
#define _REPEAT_80(macro) _REPEAT_79(macro) macro(80)
#define _REPEAT_81(macro) _REPEAT_80(macro) macro(81)

#define _CAT(a, b) a ## b
#define CAT(a, b) _CAT(a, b)
